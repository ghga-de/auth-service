[build-system]
requires = [
    "setuptools>=78.1",
]
build-backend = "setuptools.build_meta"

[project]
readme = "README.md"
authors = [
    { name = "German Human Genome Phenome Archive (GHGA)", email = "contact@ghga.de" },
]
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 1 - Planning",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries",
    "Intended Audience :: Developers",
]
name = "auth_service"
version = "3.1.0"
description = "Authentication adapter and services used for the GHGA data portal"
dependencies = [
    "ghga-event-schemas~=5.0.0",
    "ghga-service-commons[api,auth]>=4,<5",
    "hexkit[mongodb,akafka]>=4.3",
    "pynacl>=1.5,<2",
    "pyotp>=2.9,<3",
    "httpx>=0.28",
    "opentelemetry-api>=1.31.1",
    "opentelemetry-sdk>=1.31.1",
    "opentelemetry-exporter-otlp-proto-http>=1.31.1",
    "opentelemetry-distro>=0.52b1",
    "opentelemetry-instrumentation>=0.52b1",
    "opentelemetry-instrumentation-aiokafka>=0.52b1",
    "opentelemetry-instrumentation-botocore>=0.52b1",
    "opentelemetry-instrumentation-fastapi>=0.52b1",
    "opentelemetry-instrumentation-httpx>=0.52b1",
    "opentelemetry-instrumentation-pymongo>=0.52b1",
]

[project.license]
text = "Apache 2.0"

[project.urls]
Repository = "https://github.com/ghga-de/auth-service"

[project.scripts]
auth-service = "auth_service.__main__:run"

[tool.setuptools.packages.find]
where = [
    "src",
]

[tool.ruff]
exclude = [
    ".git",
    ".devcontainer",
    "__pycache__",
    "build",
    "dist",
]
line-length = 88
src = [
    "src",
    "tests",
    "examples",
    "scripts",
]
target-version = "py312"

[tool.ruff.lint]
fixable = [
    "UP",
    "I",
    "D",
    "RUF022",
]
ignore = [
    "E111",
    "E114",
    "E116",
    "PLW",
    "RUF001",
    "RUF010",
    "RUF012",
    "N818",
    "B008",
    "PLR2004",
    "D205",
    "D400",
    "D401",
    "D107",
    "D206",
    "D300",
    "UP040",
    "PLC0206",
]
select = [
    "C90",
    "F",
    "I",
    "S",
    "B",
    "N",
    "UP",
    "PL",
    "RUF",
    "SIM",
    "D",
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"scripts/*" = [
    "PL",
    "S",
    "SIM",
    "D",
]
"tests/*" = [
    "S",
    "SIM",
    "PLR",
    "B011",
]
".devcontainer/*" = [
    "S",
    "SIM",
    "D",
]
"examples/*" = [
    "S",
    "D",
]
"__init__.py" = [
    "D",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.mypy]
disable_error_code = "import"
show_error_codes = true
exclude = [
    "build/lib/",
]
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true
no_site_packages = false

[tool.pytest.ini_options]
minversion = "8.3"
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "tests/unit",
    "tests/integration",
]

[tool.coverage.paths]
source = [
    "src",
    "/workspace/src",
    "**/lib/python*/site-packages",
]
